// Approach 1 - Solution is n2 and is showing TLE on Leetcode
public boolean containsDuplicate(int[] nums) {
          for (int i = 0; i < nums.length; i++) {
              int count = 0;
              for(int j = 0; j < nums.length; j++) {
                  if (nums[i] == nums[j]){
                      count ++;
                  }
              }
              if (count > 1) {
                  return true;
              }
          }
          return false;
}

//Approach 2 - Solution using HashSet, TC = O(n) SC = O(n)
public boolean containsDuplicate(int[] nums) {
        HashSet<Integer> set = new HashSet<>();
        for (int element : nums) {
            if (set.contains(element)) {
                return true;
            }
            else {
                set.add(element);
            }
        }
        return false;
    }
