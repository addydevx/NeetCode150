// Approach 1 : Brute force approach - Using a nested loop and to traverse each element in the Array to find the sum.
public int[] twoSum(int[] nums, int target) {
        int n = nums.length;
        for (int i = 0; i < n-1; i++) {
            for (int j = i+1; j < n; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[] {i , j};
                }
            }
        }
        return new int[] {-1, -1};
}
// Approach 2 : Optimal Approach - Using HashMap and using a variable compliment 
public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < nums.length; i++) {
            int compliment  = target - nums[i];

            if (map.containsKey(compliment)) {
                return new int[] {i, map.get(compliment)};
            }
            else {
                map.put(nums[i], i);
            }
        }
        return new int[] {-1, -1};
}
